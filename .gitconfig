[user]
	name = Vedang Manerikar
	email = ved.manerikar@gmail.com
	signingkey = 60B8648C
    logallrefupdates = true

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = true
    pager = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = blue

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = blue bold

[color "status"]
    added = yellow
    changed = blue
    untracked = cyan

[diff "clojure"]
    xfuncname="^(\\((def|defn).*)$"

[alias]
    # https://git.wiki.kernel.org/index.php/Aliases
    co = checkout
    st = status
    cp = cherry-pick
    # usage example: git w -n5
    w = whatchanged
    # add all changed (but not new) files to stage (index):
    au = add -u
    # show conflicting merge in gitk:
    gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
    # prune all tracking local branches that have been removed from remote:
    prune-all = !git remote | xargs -n 1 git remote prune
    # show full history in gitk (including "deleted" branches and stashes)
    history-all = !gitk --all $( git fsck | awk '/dangling commit/ {print $3}' )
    # given a string for an author, try to figure out full name and email:
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    # given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    # Search for a given string in all patches and print commit messages
    # example: search for any commit that adds or removes string "foobar"
    #     git searchcommits foobar
    # example: search commits for string "foobar" in directory src/lib
    #     git searchcommits foobar src/lib
    # example: search commits for "foobar", print full diff of commit with 1 line context
    #     git searchcommits foobar --pickaxe-all -U1 src/lib
    searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""
    # slight ego-boosting
    # show list of contributors in descending order by number of commits
    rank = shortlog -sn --no-merges
    rank-with-merges = shortlog -sn
    loc = "!sh -c 'git log -i -p --author=\"$1\" | wc -l' -"
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    gerrit-push = !sh -c 'git push $1 HEAD:refs/for/$2' -
    lg = log --pretty=format:'%C(bold red)%h%Creset -%C(bold yellow)%d%Creset %s %C(bold green)(%cr)%Creset %C(bold blue)[%an]%Creset' --graph
    lc = log ORIG_HEAD.. --stat --no-merges
    lt = for-each-ref --sort='-taggerdate' --format '%(refname:short)' --count=1 refs/tags
    tl = for-each-ref --sort='-*creatordate' --format='%(refname:short) | %(creatordate:short)' --count=10 refs/tags
    visual = !gitk --all
    changes = diff --name-status -r
    diffstat = diff --stat -r
    oldest-ancestor = !bash -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
    latest-tag = !git describe --tags $(git rev-list --tags --max-count=1)


[rerere]
	enabled = 1

[branch]
	autosetuprebase = always
	autosetupmerge = always

[core]
    editor = emacsclient
    attributesfile = ~/.gitattributes
    pager = bat

[merge]
	log = true

# Use Gerrit notes if they are available.
# fetch the branch refs/notes/review
[notes]
    displayRef = refs/notes/review

[pretty]
	changelog = format:- %w(76,0,2)%s%n%w(76,2,2)%b

[push]
	default = simple
    recurseSubmodules = check

# Turn this on to sign all commits.
# [commit]
# 	gpgsign = true
[submodule]
	fetchJobs = 4
[diff]
	compactionHeuristic = true
[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less
[interactive]
	diffFilter = diff-highlight
# [color "diff-highlight"]
#     oldNormal = "black #f8cbcb"
#     oldHighlight = "black #ffaaaa"
#     newNormal = "black #cbeecb"
#     newHighlight = "black #aaffaa"
[github]
	user = vedang
