;; -*- mode: Lisp -*-

(in-package :stumpwm)

(message "Loading rc!")

;;; Change prefix key
(set-prefix-key (kbd "C-m"))
(define-key *root-map* (kbd "C-m") "other")

;;; Emacsian select
(define-key *root-map* (kbd "b") "select")

(set-fg-color "Yellow")
(set-bg-color "Black")
(set-border-color "Black")

;; defprogram-shortcuts
(defprogram-shortcut emacs :command "emacs" :key (kbd "s-e"))
(defprogram-shortcut conkeror :command "conkeror" :key (kbd "s-x"))
(defprogram-shortcut terminal :command "gnome-terminal" :key (kbd "s-t"))
(defprogram-shortcut xterm :command "xterm" :key (kbd "s-c"))

(define-stumpwm-command "refocus-conkeror" ()
  "Re-focus the conkeror buffer.
   Useful when you want to escape Flash without a mouse."
  (shell-command "conkeror -batch -e 'if (w=window_watcher.activeWindow) {
                     unfocus(w.buffers.current);
                     w.minibuffer.message(\"focus regained\");
                   }'"))

(define-key *root-map* (kbd "X") "refocus-conkeror")

;; Code by Male
;; Display the keysequence in progress
(defun key-press-hook (key key-seq cmd)
  (declare (ignore key))
  (unless (eq *top-map* *resize-map*)
    (let ((*message-window-gravity* :bottom-right))
      (message "Key sequence: ~A" (print-key-seq (reverse key-seq))))
    (when (stringp cmd)
      ;; Give 'em time to read it.
      (sleep 0.5))))

(defmacro replace-hook (hook fn)
 `(remove-hook ,hook ,fn)
 `(add-hook ,hook ,fn))

(replace-hook *key-press-hook* 'key-press-hook)

;;; stuff for MPD
(load-module "mpd")
(define-key *root-map* (kbd "M") '*mpd-map*)
